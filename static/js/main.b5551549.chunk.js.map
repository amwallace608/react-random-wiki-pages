{"version":3,"sources":["Api.js","index.js"],"names":["App","state","data","fetch","then","result","json","setState","Object","keys","this","length","resultArray","getWikiPages","pages","entries","pop","pageArray","Array","i","title","href","pageid","className","map","index","key","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAgGeA,E,4MA7FbC,MAAQ,CACNC,KAAM,I,kEAIa,IAAD,OAMlBC,MAHE,gJAIDC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACzBF,MAAK,SAACC,GACN,EAAKE,SAAS,CACbL,KAAMG,S,2CAQP,GAA6C,KAAzCG,OAAOC,KAAKC,KAAKT,MAAMC,MAAMS,OAAe,KAEtCT,EAASQ,KAAKT,MAAdC,KACLU,EAAcF,KAAKG,aAAaX,GACtCQ,KAAKH,SAAS,CAAEL,KAAMU,O,mCAKVV,GACX,IAQIY,EARYN,OAAOO,QAAQb,GAIPc,MAIAA,MAItBC,EAAYT,OAAOO,QAAQD,GAI/BA,EAAQG,EAAUD,MAIlBC,EAAYT,OAAOO,QAAQD,EAAM,IAOjC,IAHE,IAAIF,EAAc,IAAIM,MAAMD,EAAUN,QAG/BQ,EAAI,EAAGA,EAAIF,EAAUN,OAAQQ,IAErCP,EAAYO,GACX,6BACC,4BAAKF,EAAUE,GAAG,GAAGC,OACrB,4BACC,uBACCC,KAAM,kCAAoCJ,EAAUE,GAAG,GAAGG,OAC1DC,UAAU,UAFX,kBAcF,OAHmBX,EAAYY,KAAI,SAACnB,EAAQoB,GAAT,OACjC,wBAAIC,IAAKD,GAAQpB,Q,+BAOnB,OAA6C,KAAzCG,OAAOC,KAAKC,KAAKT,MAAMC,MAAMS,OACxB,4BAAKD,KAAKT,MAAMC,MAEhB,8C,GAzFKyB,aCGlBC,IAASC,OACP,6BACE,gEACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b5551549.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n  }\r\n\r\n  //retrieve JSON data from API for random wikipedia search when component is mounted\r\n  componentDidMount() {\r\n    //url for query to get 10 random wikipedia pages\r\n    const url =\r\n      \"https://en.wikipedia.org/w/api.php?format=json&action=query&generator=random&grnnamespace=0&prop=revisions|images&rvprop=content&grnlimit=10\";\r\n\r\n    //fetch JSON data from url\r\n    fetch(url)\r\n\t\t  .then((result) => result.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdata: result,\r\n\t\t\t\t});\r\n\t\t\t});\r\n  }\r\n\r\n  //get title and url pages from API response on component mount\r\n  componentDidUpdate() {\r\n    //only perform if state data is not already set to data fetched from api\r\n    if((Object.keys(this.state.data).length) !== 10){\r\n      //get api fetch result from state\r\n      const { data } = this.state;\r\n\t\t\tconst resultArray = this.getWikiPages(data)\r\n\t\t\tthis.setState({ data: resultArray });\r\n    }\r\n  }\r\n\r\n  //get wiki pages list from data of API fetch result\r\n  getWikiPages(data){\r\n    const jsonDat = Object.entries(data);\r\n    //console.log(jsonDat);\r\n\r\n    //get \"query\" object of JSON response\r\n\t\tvar queryResult = jsonDat.pop();\r\n    //console.log(queryResult);\r\n    \r\n    //get \"pages\" object of query object\r\n    var pages = queryResult.pop();\r\n    //console.log(pages);\r\n\r\n    //get array of objects in \"pages\" object\r\n\t\tvar pageArray = Object.entries(pages);\r\n    //console.log(pageArray);\r\n\r\n    //get pages array object from entries array\r\n\t\tpages = pageArray.pop();\r\n    //console.log(pages[1]);\r\n\r\n    //get array of page objects from pages array\r\n\t\tpageArray = Object.entries(pages[1]);\r\n\t\t//console.log(pageArray);\r\n\r\n    //new array for wiki page list items\r\n    var resultArray = new Array(pageArray.length);\r\n    \r\n    //populate array with description list elements   \r\n\t\tfor (var i = 0; i < pageArray.length; i++) {\r\n\t\t\t//get title and url from pages found with search, arrange in description list elements\r\n\t\t\tresultArray[i] = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<dt>{pageArray[i][1].title}</dt>\r\n\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref={\"http://en.wikipedia.org/?curid=\" + pageArray[i][1].pageid}\r\n\t\t\t\t\t\t\tclassName=\"button\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCheck it out\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</dd>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n    }\r\n    //map results array as list items with keys\r\n    const resultList = resultArray.map((result, index) => \r\n      <li key={index}>{result}</li>)\r\n\t\t//console.log(resultArray);\r\n    return resultList\r\n  }\r\n\r\n  render () {\r\n    //only render list if data.length = number of pages requested from API\r\n    if((Object.keys(this.state.data).length) === 10){\r\n      return <ul>{this.state.data}</ul>\r\n    } else {\r\n      return <h5 >Loading...</h5>\r\n    }\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Api'\n\nReactDOM.render(\n  <div>\n    <h5>Your random Wikipedia pages are:</h5>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}